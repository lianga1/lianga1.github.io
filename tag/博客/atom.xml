<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>意大利炮打友军 • Posts by &#34;博客&#34; tag</title>
    <link href="http://example.com" />
    <updated>2023-07-05T01:46:48.000Z</updated>
    <category term="随笔" />
    <category term="技术" />
    <category term="博客" />
    <category term="markdown" />
    <category term="月历" />
    <category term="WSL" />
    <category term="Linux" />
    <category term="编译" />
    <category term="电赛" />
    <category term="记录" />
    <entry>
        <id>http://example.com/2023/07/05/%E7%94%B5%E8%B5%9B%E5%9F%B9%E8%AE%AD-23-07-05/</id>
        <title>电赛培训-23-07-05</title>
        <link rel="alternate" href="http://example.com/2023/07/05/%E7%94%B5%E8%B5%9B%E5%9F%B9%E8%AE%AD-23-07-05/"/>
        <content type="html">&lt;h1 id=&#34;Arduino&#34;&gt;&lt;a href=&#34;#Arduino&#34; class=&#34;headerlink&#34; title=&#34;Arduino&#34;&gt;&lt;/a&gt;Arduino&lt;/h1&gt;&lt;p&gt;软件：使用Arduino IDE，以C++风格语言编写相关库。&lt;br&gt;利用IDE编译固件下载到Arduino的前提条件是有bootloader程序。&lt;br&gt;所以从程序到固件的关键在于bootloader，其他单片机也可以装载bootloader固件，然后使用arduino库。&lt;/p&gt;
&lt;h2 id=&#34;硬件-uno板&#34;&gt;&lt;a href=&#34;#硬件-uno板&#34; class=&#34;headerlink&#34; title=&#34;硬件 uno板&#34;&gt;&lt;/a&gt;硬件 uno板&lt;/h2&gt;&lt;p&gt;工作电压5v,可以typeB，DC5.5，或者跳线接入&lt;br&gt;共有14个数字输入输出（6个PWM口），6个模拟输入输出&lt;/p&gt;
&lt;h2 id=&#34;系统指示灯&#34;&gt;&lt;a href=&#34;#系统指示灯&#34; class=&#34;headerlink&#34; title=&#34;系统指示灯&#34;&gt;&lt;/a&gt;系统指示灯&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;ON：系统指示灯&lt;/li&gt;
&lt;li&gt;RX：接收指示灯&lt;/li&gt;
&lt;li&gt;TX：发送指示灯&lt;/li&gt;
&lt;li&gt;L：内置LED，对应13号数字口&lt;h2 id=&#34;开始编写代码&#34;&gt;&lt;a href=&#34;#开始编写代码&#34; class=&#34;headerlink&#34; title=&#34;开始编写代码&#34;&gt;&lt;/a&gt;开始编写代码&lt;/h2&gt;有两个一定会有的函数，void setup()和void loop()，分别是初始化和循环函数。&lt;br&gt;setup会执行一次，loop在setup后会自动循环&lt;h3 id=&#34;setup函数&#34;&gt;&lt;a href=&#34;#setup函数&#34; class=&#34;headerlink&#34; title=&#34;setup函数&#34;&gt;&lt;/a&gt;setup函数&lt;/h3&gt;setup中用pinMode配置管脚模式为输出&lt;br&gt;pinMode(pin编号，INPUT)：高阻态，可认为是100m欧姆，电平不定。&lt;br&gt;pinMode(pinnum,INPUT_PULLUP):内置上拉输入，无外部信号默认高电平。&lt;br&gt;pinMode(pinnum,OUTPUT):输出模式，uno上高电平5v，电流&amp;lt;40mA&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;loop函数&#34;&gt;&lt;a href=&#34;#loop函数&#34; class=&#34;headerlink&#34; title=&#34;loop函数&#34;&gt;&lt;/a&gt;loop函数&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;digitalWrite(pinnum,HIGH&amp;#x2F;LOW):输出高低电平，只对output模式有效&lt;/li&gt;
&lt;li&gt;digitalRead(pinnum):读取高低电平,返回HIGH&amp;#x2F;LOW两种电平&lt;/li&gt;
&lt;li&gt;analogRead(anaPinNum)：读取模拟输入电平，返回0-1023的数字，对应0-5v的电压&lt;/li&gt;
&lt;li&gt;analogWrite(pwmPinNum,0-255)：输出PWM波，对应0-5v的电压，频率为490Hz(3,9,10,11pin),或980Hz(5,6pin)&lt;/li&gt;
&lt;li&gt;analogReference(AD参考电压输入来源)：切换AD参考电压输入来源，有默认值，一般不用，可以让输出更加精细。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;中断和轮询&#34;&gt;&lt;a href=&#34;#中断和轮询&#34; class=&#34;headerlink&#34; title=&#34;中断和轮询&#34;&gt;&lt;/a&gt;中断和轮询&lt;/h3&gt;&lt;p&gt;轮询：不断重复读取某个状态值，缺点是占用资源&lt;br&gt;中断：可以通过某个状态改变来发送信号，然后发送信号后可以执行其他操作，之后再恢复到发送信号之前的状态。&lt;br&gt;管脚中断：attachInterrupt(digitalPinToInterrupt(pinnum),ISR,mode),第一个参数是中断管脚号（uno为2，3），第二个参数是中断服务函数（可以自定义），第三个参数是中断模式，有LOW，RISING，FALLING，CHANGE四种模式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LOW：低电平触发&lt;/li&gt;
&lt;li&gt;RISING：上升沿触发&lt;/li&gt;
&lt;li&gt;FALLING：下降沿触发&lt;/li&gt;
&lt;li&gt;CHANGE：任意电平变化触发&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注意，终端服务函数应当很短，而且不能使用其他中断实现的函数，延时需要delayMicroseconds(us)&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;修改全局变量应当用volatile修饰，防止编译器优化&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;ESP32&#34;&gt;&lt;a href=&#34;#ESP32&#34; class=&#34;headerlink&#34; title=&#34;ESP32&#34;&gt;&lt;/a&gt;ESP32&lt;/h1&gt;&lt;h2 id=&#34;硬件&#34;&gt;&lt;a href=&#34;#硬件&#34; class=&#34;headerlink&#34; title=&#34;硬件&#34;&gt;&lt;/a&gt;硬件&lt;/h2&gt;&lt;p&gt;esp32-WROOM-32&lt;br&gt;串口芯片：CP2102&lt;br&gt;核心频率240mHz&lt;br&gt;WiFi IEEE 802.11 b&amp;#x2F;g&amp;#x2F;n 2.4GHz&lt;br&gt;BLuetooth 4.2 BR&amp;#x2F;EDR and BLE&lt;br&gt;520k SRAM 448kB ROM&lt;br&gt;2个I2S，RMT远程控制，LED PWM，1个host SD&amp;#x2F;eMMC&amp;#x2F;SDIO，一个slave SDIO&amp;#x2F;SPI. TWAI(CAN),12bitADC,Ethernet&lt;/p&gt;
&lt;h2 id=&#34;开发环境&#34;&gt;&lt;a href=&#34;#开发环境&#34; class=&#34;headerlink&#34; title=&#34;开发环境&#34;&gt;&lt;/a&gt;开发环境&lt;/h2&gt;&lt;p&gt;MicroPython+Thonny&lt;/p&gt;
&lt;h3 id=&#34;常用库&#34;&gt;&lt;a href=&#34;#常用库&#34; class=&#34;headerlink&#34; title=&#34;常用库&#34;&gt;&lt;/a&gt;常用库&lt;/h3&gt;&lt;h3 id=&#34;GPIO&#34;&gt;&lt;a href=&#34;#GPIO&#34; class=&#34;headerlink&#34; title=&#34;GPIO&#34;&gt;&lt;/a&gt;GPIO&lt;/h3&gt;&lt;figure class=&#34;highlight pgsql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs pgsql&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;from&lt;/span&gt; machine &lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; Pin&lt;br&gt;&lt;br&gt;p0 = Pin(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,Pin.&lt;span class=&#34;hljs-keyword&#34;&gt;OUT&lt;/span&gt;) # &lt;span class=&#34;hljs-keyword&#34;&gt;create&lt;/span&gt; output pin &lt;span class=&#34;hljs-keyword&#34;&gt;on&lt;/span&gt; GPIO0&lt;br&gt;p0.&lt;span class=&#34;hljs-keyword&#34;&gt;on&lt;/span&gt;() # &lt;span class=&#34;hljs-keyword&#34;&gt;set&lt;/span&gt; pin &lt;span class=&#34;hljs-keyword&#34;&gt;to&lt;/span&gt; &amp;quot;on&amp;quot; (high) &lt;span class=&#34;hljs-keyword&#34;&gt;level&lt;/span&gt;&lt;br&gt;p0.&lt;span class=&#34;hljs-keyword&#34;&gt;off&lt;/span&gt;() # &lt;span class=&#34;hljs-keyword&#34;&gt;set&lt;/span&gt; pin &lt;span class=&#34;hljs-keyword&#34;&gt;to&lt;/span&gt; &amp;quot;off&amp;quot; (low) &lt;span class=&#34;hljs-keyword&#34;&gt;level&lt;/span&gt;&lt;br&gt;p0.&lt;span class=&#34;hljs-keyword&#34;&gt;value&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;) # &lt;span class=&#34;hljs-keyword&#34;&gt;set&lt;/span&gt; pin &lt;span class=&#34;hljs-keyword&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;on&lt;/span&gt;/high&lt;br&gt;p0.init(p0.&lt;span class=&#34;hljs-keyword&#34;&gt;IN&lt;/span&gt;,p0.PULL_DOWN) # &lt;span class=&#34;hljs-keyword&#34;&gt;set&lt;/span&gt; pin &lt;span class=&#34;hljs-keyword&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;with&lt;/span&gt; a pull-down resistor&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;init函数中，id是强制的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;mode指定引脚模式，有IN，OUT，OPEN_DRAIN，AF_OPEN_DRAIN四种模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;pull指定引脚是否连接弱上拉电阻，有None，PULL_UP，PULL_DOWN三种模式&lt;br&gt;弱上拉指上拉电阻阻值较大，高电平很容易因为外部电流驱动而拉低。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;drive具有不同的最大安全电流的限制，有DRIVE_0-3四种选择&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;alt为引脚的备用功能，仅对alt和alt_open_drain两种模式有效，有0-7八种选择&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;value函数中，如果不带参数，就是得到当前状态，如果在输出模式，需要带参数，变为设置电平&lt;/p&gt;
&lt;p&gt;配置在引脚的触发源处于活动状态时要调用中断处理程序，如果引脚模式为Pin.IN，可以使用irq函数，如果引脚模式为Pin.IN，可以使用Pin.IRQ_RISING，Pin.IRQ_FALLING，Pin.IRQ_ANY三种模式，分别对应上升沿，下降沿，任意电平变化触发中断。&lt;/p&gt;
</content>
        <category term="技术" />
        <category term="博客" />
        <category term="电赛" />
        <updated>2023-07-05T01:46:48.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2023/05/29/%E5%85%B3%E4%BA%8E%E8%A7%A3%E5%86%B3WSL-Ubuntu%E6%89%BE%E4%B8%8D%E5%88%B0sys-time-h%E7%9A%84%E9%97%AE%E9%A2%98/</id>
        <title>关于解决WSL_Ubuntu找不到sys/time.h的问题</title>
        <link rel="alternate" href="http://example.com/2023/05/29/%E5%85%B3%E4%BA%8E%E8%A7%A3%E5%86%B3WSL-Ubuntu%E6%89%BE%E4%B8%8D%E5%88%B0sys-time-h%E7%9A%84%E9%97%AE%E9%A2%98/"/>
        <content type="html">&lt;h1 id=&#34;问题描述&#34;&gt;&lt;a href=&#34;#问题描述&#34; class=&#34;headerlink&#34; title=&#34;问题描述&#34;&gt;&lt;/a&gt;问题描述&lt;/h1&gt;&lt;p&gt;在使用WSL_Ubuntu的时候，编译C代码时，出现了找不到sys&amp;#x2F;time.h的问题&lt;/p&gt;
&lt;h1 id=&#34;解决方法&#34;&gt;&lt;a href=&#34;#解决方法&#34; class=&#34;headerlink&#34; title=&#34;解决方法&#34;&gt;&lt;/a&gt;解决方法&lt;/h1&gt;&lt;h2 id=&#34;第一次失败&#34;&gt;&lt;a href=&#34;#第一次失败&#34; class=&#34;headerlink&#34; title=&#34;第一次失败&#34;&gt;&lt;/a&gt;第一次失败&lt;/h2&gt;&lt;p&gt;网上的一个直接解决方案是安装libc6-dev-amd64&lt;br&gt;但是问题又一次出现，当输入指令&lt;br&gt;&lt;code&gt;sudo apt-get install libc6-dev-amd64&lt;/code&gt;&lt;br&gt;发生报错 unable to locate package&lt;/p&gt;
&lt;h2 id=&#34;第二次失败&#34;&gt;&lt;a href=&#34;#第二次失败&#34; class=&#34;headerlink&#34; title=&#34;第二次失败&#34;&gt;&lt;/a&gt;第二次失败&lt;/h2&gt;&lt;p&gt;于是转而解决无法定位包的问题，根据查找发现需要在&amp;#x2F;etc&amp;#x2F;apt&amp;#x2F;sources.list中添加源,添加了清华源、阿里源后输入&lt;br&gt;&lt;code&gt;sudo apt-get update&lt;/code&gt;&lt;br&gt;更新完成后再次尝试安装libc6-dev-amd64，但是问题依旧存在&lt;/p&gt;
&lt;h2 id=&#34;第三次解决&#34;&gt;&lt;a href=&#34;#第三次解决&#34; class=&#34;headerlink&#34; title=&#34;第三次解决&#34;&gt;&lt;/a&gt;第三次解决&lt;/h2&gt;&lt;p&gt;这次发现libc6-dev-amd64是一个需要在i386架构下安装的包，于是尝试添加i386架构，运行指令&lt;br&gt;&lt;code&gt;dpkg --add-architecture i386&lt;/code&gt;&lt;br&gt;添加成功后再次输入&lt;br&gt;&lt;code&gt;sudo apt-get update&lt;/code&gt;&lt;br&gt;更新完成后再次尝试安装libc6-dev-amd64，问题解决&lt;/p&gt;
</content>
        <category term="技术" />
        <category term="博客" />
        <category term="WSL" />
        <category term="Linux" />
        <category term="编译" />
        <updated>2023-05-29T07:24:24.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2023/05/14/%E7%94%B5%E8%B5%9B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/</id>
        <title>电赛学习笔记-机器视觉</title>
        <link rel="alternate" href="http://example.com/2023/05/14/%E7%94%B5%E8%B5%9B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/"/>
        <content type="html">&lt;h1 id=&#34;开发环境&#34;&gt;&lt;a href=&#34;#开发环境&#34; class=&#34;headerlink&#34; title=&#34;开发环境&#34;&gt;&lt;/a&gt;开发环境&lt;/h1&gt;&lt;h2 id=&#34;安装opencv&#34;&gt;&lt;a href=&#34;#安装opencv&#34; class=&#34;headerlink&#34; title=&#34;安装opencv&#34;&gt;&lt;/a&gt;安装opencv&lt;/h2&gt;&lt;h2 id=&#34;开发板：STM32F407&#34;&gt;&lt;a href=&#34;#开发板：STM32F407&#34; class=&#34;headerlink&#34; title=&#34;开发板：STM32F407&#34;&gt;&lt;/a&gt;开发板：STM32F407&lt;/h2&gt;&lt;h2 id=&#34;IDE：STM32CubeIDE&#34;&gt;&lt;a href=&#34;#IDE：STM32CubeIDE&#34; class=&#34;headerlink&#34; title=&#34;IDE：STM32CubeIDE&#34;&gt;&lt;/a&gt;IDE：STM32CubeIDE&lt;/h2&gt;&lt;h2 id=&#34;配置过程&#34;&gt;&lt;a href=&#34;#配置过程&#34; class=&#34;headerlink&#34; title=&#34;配置过程&#34;&gt;&lt;/a&gt;配置过程&lt;/h2&gt;&lt;p&gt;配置工程ioc文件，配置好基础外设后，再packs中安装X-CUBE-AI组件包，在软件包外设中添加模型文件，设置压缩倍数，导入测试集验证准确率&lt;/p&gt;
&lt;h2 id=&#34;模型&#34;&gt;&lt;a href=&#34;#模型&#34; class=&#34;headerlink&#34; title=&#34;模型&#34;&gt;&lt;/a&gt;模型&lt;/h2&gt;&lt;h3 id=&#34;yolo&#34;&gt;&lt;a href=&#34;#yolo&#34; class=&#34;headerlink&#34; title=&#34;yolo&#34;&gt;&lt;/a&gt;yolo&lt;/h3&gt;&lt;p&gt;利用mobilenet yolo50k模型可以导入到单片机中，只需要较少内存即可实现实时运行，实现人脸识别的功能&lt;/p&gt;
&lt;h3 id=&#34;openmv&#34;&gt;&lt;a href=&#34;#openmv&#34; class=&#34;headerlink&#34; title=&#34;openmv&#34;&gt;&lt;/a&gt;openmv&lt;/h3&gt;&lt;h2 id=&#34;硬件&#34;&gt;&lt;a href=&#34;#硬件&#34; class=&#34;headerlink&#34; title=&#34;硬件&#34;&gt;&lt;/a&gt;硬件&lt;/h2&gt;&lt;p&gt;正点原子ov7725摄像头&lt;br&gt;yolo50k&lt;/p&gt;
&lt;h1 id=&#34;相关资料&#34;&gt;&lt;a href=&#34;#相关资料&#34; class=&#34;headerlink&#34; title=&#34;相关资料&#34;&gt;&lt;/a&gt;相关资料&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1Bt411w77m/?share_source=copy_web&amp;vd_source=4ed5c2c0429d7681216f506ac1e74065&#34;&gt;稚晖君&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/dog-qiuqiu/MobileNet-Yolo&#34;&gt;yolo50k仓库&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1FL411u72p/?share_source=copy_web&amp;vd_source=4ed5c2c0429d7681216f506ac1e74065&#34;&gt;实时运行案例&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="技术" />
        <category term="博客" />
        <category term="电赛" />
        <updated>2023-05-14T09:04:31.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2023/05/14/%E7%94%B5%E8%B5%9B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-micropython/</id>
        <title>电赛学习笔记-micropython</title>
        <link rel="alternate" href="http://example.com/2023/05/14/%E7%94%B5%E8%B5%9B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-micropython/"/>
        <content type="html">&lt;h1 id=&#34;micropython简介&#34;&gt;&lt;a href=&#34;#micropython简介&#34; class=&#34;headerlink&#34; title=&#34;micropython简介&#34;&gt;&lt;/a&gt;micropython简介&lt;/h1&gt;&lt;p&gt;micropython是一个能够利用python进行单片机开发的固件，目前主要是在esp32平台上进行的开发&lt;/p&gt;
&lt;h1 id=&#34;micropython安装&#34;&gt;&lt;a href=&#34;#micropython安装&#34; class=&#34;headerlink&#34; title=&#34;micropython安装&#34;&gt;&lt;/a&gt;micropython安装&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;在micropython官网找到对应的单片机的型号的固件文件（.bin），下载到对应位置&lt;/li&gt;
&lt;li&gt;pip install esptool&lt;/li&gt;
&lt;li&gt;连接esp32单片机，查看端口号&lt;/li&gt;
&lt;li&gt;根据micropython官网的指示，利用esptool.py文件，清除单片机flash，再部署固件到单片机。&lt;/li&gt;
&lt;li&gt;安装uPyCraft IDE，选择好开发板类型和端口号后，&lt;h1 id=&#34;micropython使用&#34;&gt;&lt;a href=&#34;#micropython使用&#34; class=&#34;headerlink&#34; title=&#34;micropython使用&#34;&gt;&lt;/a&gt;micropython使用&lt;/h1&gt;需要根据单片机自带的库函数，进行python文档的开发&lt;h1 id=&#34;micropython的优点&#34;&gt;&lt;a href=&#34;#micropython的优点&#34; class=&#34;headerlink&#34; title=&#34;micropython的优点&#34;&gt;&lt;/a&gt;micropython的优点&lt;/h1&gt;代码量少，配置简单&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="技术" />
        <category term="博客" />
        <category term="电赛" />
        <updated>2023-05-14T08:47:54.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2023/05/11/%E7%94%B5%E8%B5%9B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%881%EF%BC%89/</id>
        <title>电赛学习笔记（1）——stm32学习笔记</title>
        <link rel="alternate" href="http://example.com/2023/05/11/%E7%94%B5%E8%B5%9B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%881%EF%BC%89/"/>
        <content type="html">&lt;h1 id=&#34;stm32基础&#34;&gt;&lt;a href=&#34;#stm32基础&#34; class=&#34;headerlink&#34; title=&#34;stm32基础&#34;&gt;&lt;/a&gt;stm32基础&lt;/h1&gt;&lt;h2 id=&#34;关于stm32产品线&#34;&gt;&lt;a href=&#34;#关于stm32产品线&#34; class=&#34;headerlink&#34; title=&#34;关于stm32产品线&#34;&gt;&lt;/a&gt;关于stm32产品线&lt;/h2&gt;&lt;h3 id=&#34;stm32f1系列-cortex-m3&#34;&gt;&lt;a href=&#34;#stm32f1系列-cortex-m3&#34; class=&#34;headerlink&#34; title=&#34;stm32f1系列 cortex-m3&#34;&gt;&lt;/a&gt;stm32f1系列 cortex-m3&lt;/h3&gt;&lt;h3 id=&#34;stm32f4系列-cortex-m4&#34;&gt;&lt;a href=&#34;#stm32f4系列-cortex-m4&#34; class=&#34;headerlink&#34; title=&#34;stm32f4系列 cortex-m4&#34;&gt;&lt;/a&gt;stm32f4系列 cortex-m4&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;内置了rgb lcd驱动&lt;/li&gt;
&lt;li&gt;加入了DSP与FPU模块&lt;h3 id=&#34;stm32f7系列-cortex-m7&#34;&gt;&lt;a href=&#34;#stm32f7系列-cortex-m7&#34; class=&#34;headerlink&#34; title=&#34;stm32f7系列 cortex-m7&#34;&gt;&lt;/a&gt;stm32f7系列 cortex-m7&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;高速内存得到应用 &lt;h2 id=&#34;寄存器编程&#34;&gt;&lt;a href=&#34;#寄存器编程&#34; class=&#34;headerlink&#34; title=&#34;寄存器编程&#34;&gt;&lt;/a&gt;寄存器编程&lt;/h2&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;关键字volatile&lt;/strong&gt;需要在声明寄存器变量的时候添加，因为要防止编译器自行优化。&lt;/p&gt;
&lt;h2 id=&#34;HAL库&#34;&gt;&lt;a href=&#34;#HAL库&#34; class=&#34;headerlink&#34; title=&#34;HAL库&#34;&gt;&lt;/a&gt;HAL库&lt;/h2&gt;&lt;p&gt;硬件抽象层，可以将不同产品线的芯片的寄存器操作抽象为函数，方便移植&lt;br&gt;&lt;strong&gt;&lt;font color=&#34;red&#34;&gt;本笔记使用HAL库进行编程&lt;/font&gt;&lt;/strong&gt;&lt;br&gt;相对的，HAL库会产生大量的判断来降低代码运行效率&lt;br&gt;但是，还有另一个Low Layer库（LL），这个库可以提高效率&lt;/p&gt;
&lt;h2 id=&#34;stm32cubeMX配置&#34;&gt;&lt;a href=&#34;#stm32cubeMX配置&#34; class=&#34;headerlink&#34; title=&#34;stm32cubeMX配置&#34;&gt;&lt;/a&gt;stm32cubeMX配置&lt;/h2&gt;&lt;h2 id=&#34;stm32计时器&#34;&gt;&lt;a href=&#34;#stm32计时器&#34; class=&#34;headerlink&#34; title=&#34;stm32计时器&#34;&gt;&lt;/a&gt;stm32计时器&lt;/h2&gt;&lt;h3 id=&#34;PWM调制输出&#34;&gt;&lt;a href=&#34;#PWM调制输出&#34; class=&#34;headerlink&#34; title=&#34;PWM调制输出&#34;&gt;&lt;/a&gt;PWM调制输出&lt;/h3&gt;&lt;h4 id=&#34;几个重要参数&#34;&gt;&lt;a href=&#34;#几个重要参数&#34; class=&#34;headerlink&#34; title=&#34;几个重要参数&#34;&gt;&lt;/a&gt;几个重要参数&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;占空比：高电平占整个周期的比例&lt;/li&gt;
&lt;li&gt;频率：整个PWM周期的倒数&lt;/li&gt;
&lt;li&gt;分辨率：占空比变化步长 &lt;h4 id=&#34;PWM实现方法&#34;&gt;&lt;a href=&#34;#PWM实现方法&#34; class=&#34;headerlink&#34; title=&#34;PWM实现方法&#34;&gt;&lt;/a&gt;PWM实现方法&lt;/h4&gt;输出比较模式，依靠内部计数器cnt和ccr设置的数值的比较来进行输出电平的控制，常用的有匹配时电平翻转和PWM模式&lt;br&gt;PWM占空比：$$DutyCycle&amp;#x3D;\frac{CCR}{ARR}$$&lt;br&gt;PWM频率：$$Freq&amp;#x3D;\frac{F_{clk}}{ARR}$$&lt;br&gt;PWM分辨率：$$Resolution&amp;#x3D;\frac{ARR}{2^{n}}$$&lt;h4 id=&#34;高级定时器&#34;&gt;&lt;a href=&#34;#高级定时器&#34; class=&#34;headerlink&#34; title=&#34;高级定时器&#34;&gt;&lt;/a&gt;高级定时器&lt;/h4&gt;死区生成：可以避免推挽电路上下管同时打开导致短路&lt;h3 id=&#34;PWM控制电机&#34;&gt;&lt;a href=&#34;#PWM控制电机&#34; class=&#34;headerlink&#34; title=&#34;PWM控制电机&#34;&gt;&lt;/a&gt;PWM控制电机&lt;/h3&gt;舵机是根据pwm信号控制舵机转动角度的，内部有直流电机&lt;h4 id=&#34;电机驱动芯片&#34;&gt;&lt;a href=&#34;#电机驱动芯片&#34; class=&#34;headerlink&#34; title=&#34;电机驱动芯片&#34;&gt;&lt;/a&gt;电机驱动芯片&lt;/h4&gt;利用H桥，可以控制电机转动方向。四个开关管可以构成两个推挽电路，使得电机可以获得两个方向的电流。&lt;br&gt;电机需要的电源一般是大功率的，不能直接通过gpio驱动，因此可以通过让stlink的5v口接入电机驱动芯片来获得电源。但是注意，pwm信号的地应当和电机电源的地相连，否则会出现电平不稳定的情况。&lt;h3 id=&#34;PWM代码&#34;&gt;&lt;a href=&#34;#PWM代码&#34; class=&#34;headerlink&#34; title=&#34;PWM代码&#34;&gt;&lt;/a&gt;PWM代码&lt;/h3&gt;pwm的激活结构如下：&lt;br&gt;&lt;img src=&#34;/2023/05/11/%E7%94%B5%E8%B5%9B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%881%EF%BC%89/PWM_Structure.jpg&#34; alt=&#34;PWM_Structure&#34;&gt;&lt;/li&gt;
&lt;li&gt;RCC开启时钟&lt;/li&gt;
&lt;li&gt;配置时基单元&lt;/li&gt;
&lt;li&gt;配置输出比较单元&lt;/li&gt;
&lt;li&gt;配置GPIO，设置为复用推挽输出&lt;/li&gt;
&lt;li&gt;运行控制，启动计数器&lt;h4 id=&#34;TIM库函数&#34;&gt;&lt;a href=&#34;#TIM库函数&#34; class=&#34;headerlink&#34; title=&#34;TIM库函数&#34;&gt;&lt;/a&gt;TIM库函数&lt;/h4&gt;在hal库中，tim相关库函数在stm32f1xx_hal_tim.h文件中&lt;br&gt;其中有关输出比较的内容有：&lt;/li&gt;
&lt;li&gt;TIM_OC_InitTypeDef: 输出比较初始化结构体&lt;/li&gt;
&lt;li&gt;HAL_StatusTypeDef HAL_TIM_OC_Init(TIM_HandleTypeDef *htim)：输出比较初始化函数&lt;/li&gt;
&lt;li&gt;HAL_StatusTypeDef HAL_TIM_OC_ConfigChannel(TIM_HandleTypeDef *htim, TIM_OC_InitTypeDef *sConfig, uint32_t Channel)：配置输出通道函数&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="技术" />
        <category term="博客" />
        <category term="电赛" />
        <updated>2023-05-11T08:19:20.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/04/21/%E8%AE%B0%E5%BD%95%EF%BC%9A%E8%A3%85%E4%BF%AE%E5%8D%9A%E5%AE%A2/</id>
        <title>记录：装修博客</title>
        <link rel="alternate" href="http://example.com/2022/04/21/%E8%AE%B0%E5%BD%95%EF%BC%9A%E8%A3%85%E4%BF%AE%E5%8D%9A%E5%AE%A2/"/>
        <content type="html">&lt;p&gt;&lt;font color=&#34;Red&#34; size=&#34;6&#34;&gt;&lt;strong&gt;本文长期更新，后面更新的部分也会插在不同部分&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;
&lt;h1 id=&#34;目录&#34;&gt;&lt;a href=&#34;#目录&#34; class=&#34;headerlink&#34; title=&#34;目录&#34;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;.#%E5%8A%9F%E8%83%BD%E8%AE%BE%E7%BD%AE&#34;&gt;功能设置&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;.#%E4%B8%BB%E9%A2%98%E9%80%89%E5%8F%96&#34;&gt;主题选取&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;.#%E5%BD%92%E6%A1%A3%E4%B8%8E%E6%A0%87%E7%AD%BE&#34;&gt;归档与标签&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;.#%E4%B8%8B%E4%B8%80%E6%AD%A5%EF%BC%8C%E5%8F%8B%E9%93%BE%E4%B8%8E%E4%BD%9C%E8%80%85%E9%93%BE%E6%8E%A5&#34;&gt;友链与作者链接&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;.#%E4%B8%80%E4%BA%9B%E5%85%B6%E4%BB%96%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C&#34;&gt;一些其他的骚操作&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;.#%E6%87%92%E5%8A%A0%E8%BD%BD&#34;&gt;懒加载&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;.#%E7%BE%8E%E8%A7%82%E8%AE%BE%E7%BD%AE&#34;&gt;美观设置&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;.#%E8%83%8C%E6%99%AF%E5%9B%BE&#34;&gt;背景图&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;.#%E4%B8%BB%E9%A1%B5%E8%83%8C%E6%99%AF%E5%9B%BE&#34;&gt;主页背景图&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;.#%E6%96%87%E7%AB%A0%E8%83%8C%E6%99%AF%E5%9B%BE&#34;&gt;文章背景图&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;.#%E6%96%87%E7%AB%A0%E5%B0%81%E9%9D%A2%E5%9B%BE&#34;&gt;文章封面图&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;.#%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E5%8A%A8%E7%94%BB&#34;&gt;图片加载动画&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;.#%E6%89%A9%E5%B1%95%E8%AE%BE%E7%BD%AE&#34;&gt;扩展设置&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;功能设置&#34;&gt;&lt;a href=&#34;#功能设置&#34; class=&#34;headerlink&#34; title=&#34;功能设置&#34;&gt;&lt;/a&gt;功能设置&lt;/h1&gt;&lt;h2 id=&#34;主题选取&#34;&gt;&lt;a href=&#34;#主题选取&#34; class=&#34;headerlink&#34; title=&#34;主题选取&#34;&gt;&lt;/a&gt;主题选取&lt;/h2&gt;&lt;p&gt;一个博客的功能上限，很大程度上是取决于这个主题给你提供的功能，因此一个好的主题很重要&lt;br&gt;主题的选取，可以看我的另一篇文章&lt;a href=&#34;https://lianga1.github.io/2022/04/18/Hexo%E4%B8%BB%E9%A2%98%E6%A8%A1%E6%9D%BF%E5%88%87%E6%8D%A2/&#34;&gt;Hexo主题模板切换&lt;/a&gt;&lt;br&gt;但是大部分时候我们用的功能不会很多，而基础的功能，例如归档，友链，个人介绍等功能，绝大部分的主题都具备。所以仅需要挑选好看的主题即可，关于主题的美观问题，我们放在&lt;a href=&#34;.#%E7%BE%8E%E8%A7%82%E8%AE%BE%E7%BD%AE&#34;&gt;美观设置&lt;/a&gt;模块说。&lt;br&gt;&lt;img src=&#34;/2022/04/21/%E8%AE%B0%E5%BD%95%EF%BC%9A%E8%A3%85%E4%BF%AE%E5%8D%9A%E5%AE%A2/theme1.jpg&#34; alt=&#34;theme&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;导航栏&#34;&gt;&lt;a href=&#34;#导航栏&#34; class=&#34;headerlink&#34; title=&#34;导航栏&#34;&gt;&lt;/a&gt;导航栏&lt;/h2&gt;&lt;p&gt;导航栏是一个博客的门面。设置好导航栏，你的博客会非常的有条理。&lt;/p&gt;
&lt;h3 id=&#34;归档与标签&#34;&gt;&lt;a href=&#34;#归档与标签&#34; class=&#34;headerlink&#34; title=&#34;归档与标签&#34;&gt;&lt;/a&gt;归档与标签&lt;/h3&gt;&lt;p&gt;如果读者想找一篇文章,总不能让读者去挨篇文章翻吧，所以，在写文章的时候，做好标签设置和归档工作，是写一篇文章的必要工作。那么，如何归档呢？&lt;br&gt;&lt;img src=&#34;/2022/04/21/%E8%AE%B0%E5%BD%95%EF%BC%9A%E8%A3%85%E4%BF%AE%E5%8D%9A%E5%AE%A2/categories.jpg&#34; alt=&#34;categories&#34;&gt;&lt;br&gt;在md语法中，我们可以在文章顶部的标签部分，加入如下几行&lt;/p&gt;
&lt;figure class=&#34;highlight subunit&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs subunit&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;tags:&lt;/span&gt;&lt;br&gt;- 标签1&lt;br&gt;- 标签2&lt;br&gt;……&lt;br&gt;- 标签n&lt;br&gt;categories: &lt;br&gt;- 一级目录&lt;br&gt;- 二级目录&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;font size=&#34;4&#34;&gt;&lt;strong&gt;注意&lt;/strong&gt;&lt;/font&gt;：tags和categories必须无缩进，否则在生成html时会报错&lt;/p&gt;
&lt;p&gt;这样，你就拥有了一个可以从标签和分级目录中查询的文章了&lt;/p&gt;
&lt;h3 id=&#34;下一步，友链与作者链接&#34;&gt;&lt;a href=&#34;#下一步，友链与作者链接&#34; class=&#34;headerlink&#34; title=&#34;下一步，友链与作者链接&#34;&gt;&lt;/a&gt;下一步，友链与作者链接&lt;/h3&gt;&lt;p&gt;&lt;font color=&#34;Red&#34; size=&#34;6&#34;&gt;&lt;strong&gt;注意&lt;/strong&gt;&lt;/font&gt;，本文之后的内容以Fluid主题为准，其他主题大同小异，具体操作可以参照主题的介绍文档。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;为什么把友链放到前面说呢，&lt;del&gt;当然是因为我最开始没管作者链接&lt;/del&gt;，是因为友链的设置更加简单&lt;br&gt;我们需要在主题的_config.yml中（以下如果没有特殊说明，都是themes下的配置文件），在navbar：menu里，加入links，如下&lt;br&gt;&lt;code&gt; - &amp;#123; key: &amp;quot;links&amp;quot;, link: &amp;quot;/links/&amp;quot;, icon: &amp;quot;iconfont icon-link-fill&amp;quot; &amp;#125;&lt;/code&gt;&lt;br&gt;这样就可以&lt;br&gt;然后找到links部分&lt;br&gt;&lt;img src=&#34;/2022/04/21/%E8%AE%B0%E5%BD%95%EF%BC%9A%E8%A3%85%E4%BF%AE%E5%8D%9A%E5%AE%A2/links.jpg&#34; alt=&#34;links&#34;&gt;&lt;br&gt;将enable改为true即可，这样，我们的主页导航栏就会出现“友链”了。&lt;br&gt;&lt;img src=&#34;/2022/04/21/%E8%AE%B0%E5%BD%95%EF%BC%9A%E8%A3%85%E4%BF%AE%E5%8D%9A%E5%AE%A2/links2.jpg&#34; alt=&#34;links2&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size=&#34;4&#34;&gt;如何添加友链呢&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;只需要在config文件中的links模块下的item中，按照如下格式添加即可&lt;/p&gt;
&lt;figure class=&#34;highlight dts&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs dts&#34;&gt;- &amp;#123;&lt;br&gt;&lt;span class=&#34;hljs-symbol&#34;&gt;      title:&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;rittmeister&amp;quot;&lt;/span&gt;,&lt;br&gt;&lt;span class=&#34;hljs-symbol&#34;&gt;      intro:&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;xxx的博客&amp;quot;&lt;/span&gt;,&lt;br&gt;&lt;span class=&#34;hljs-symbol&#34;&gt;      link:&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;https://lianga1.github.io/&amp;quot;&lt;/span&gt;,&lt;br&gt;&lt;span class=&#34;hljs-symbol&#34;&gt;      avatar:&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;/img/avatar.png&amp;quot;&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中avatar是图标，存在主题文件夹下&amp;#x2F;source&amp;#x2F;img文件夹中，你可以根据喜好来更改&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;接下来是作者链接，作者链接略微复杂&lt;br&gt;首先，我们需要在config文件中，找到about：模块&lt;br&gt;&lt;img src=&#34;/2022/04/21/%E8%AE%B0%E5%BD%95%EF%BC%9A%E8%A3%85%E4%BF%AE%E5%8D%9A%E5%AE%A2/about1.jpg&#34; alt=&#34;about&#34;&gt;&lt;br&gt;确认是enable状态&lt;br&gt;当然，我们现在博客中点击这个页面，会显示404&lt;br&gt;原因是我们需要创建一个专门的about页面，方法如下，cmd输入代码&lt;br&gt;&lt;code&gt;hexo new page about&lt;/code&gt;&lt;br&gt;即会在source文件夹创建一个about文件夹，里面有一个index.md文件，进入&lt;br&gt;在标签部分，添加&lt;br&gt;&lt;code&gt;layout: about&lt;/code&gt;&lt;br&gt;&lt;img src=&#34;/2022/04/21/%E8%AE%B0%E5%BD%95%EF%BC%9A%E8%A3%85%E4%BF%AE%E5%8D%9A%E5%AE%A2/about2.jpg&#34; alt=&#34;about&#34;&gt;&lt;br&gt;这样，我们就会发现作者链接可以进入了。然后，我们可以在config-about模块，添加自己想要的功能。&lt;br&gt;例如我还添加了微信二维码&lt;br&gt;&lt;img src=&#34;/2022/04/21/%E8%AE%B0%E5%BD%95%EF%BC%9A%E8%A3%85%E4%BF%AE%E5%8D%9A%E5%AE%A2/about3.jpg&#34; alt=&#34;about3&#34;&gt;&lt;br&gt;除此之外，fluid提供了丰富的图标库，可以在其doc中查询css的使用方法，这里不展开介绍了&lt;/p&gt;
&lt;h3 id=&#34;一些其他的骚操作&#34;&gt;&lt;a href=&#34;#一些其他的骚操作&#34; class=&#34;headerlink&#34; title=&#34;一些其他的骚操作&#34;&gt;&lt;/a&gt;一些其他的骚操作&lt;/h3&gt;&lt;p&gt;你还可以直接加一些新的链接，还是在navbar：menu部分里加，比如我就新加了一个tape提问箱，妈妈再也不用担心没人提问了&lt;br&gt;&lt;del&gt;笑死，自闭症患儿罢了，哪有人去你的博客提问啊&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&#34;懒加载&#34;&gt;&lt;a href=&#34;#懒加载&#34; class=&#34;headerlink&#34; title=&#34;懒加载&#34;&gt;&lt;/a&gt;懒加载&lt;/h2&gt;&lt;p&gt;这个功能还是蛮有用的，单独开出来说一下&lt;br&gt;这个是可以让你的网页先加载，图片慢慢加载的功能，毕竟你的github服务器，如果等所有封面图都加载出来，黄花菜都凉了&lt;br&gt;实现方法：&lt;br&gt;config文件中lazyload：模块，enable设为true即可&lt;/p&gt;
&lt;h1 id=&#34;美观设置&#34;&gt;&lt;a href=&#34;#美观设置&#34; class=&#34;headerlink&#34; title=&#34;美观设置&#34;&gt;&lt;/a&gt;美观设置&lt;/h1&gt;&lt;p&gt;我个人很有自知之明，知道我的审美能力一般，这里仅提供一些方法上的指导&lt;/p&gt;
&lt;h2 id=&#34;背景图&#34;&gt;&lt;a href=&#34;#背景图&#34; class=&#34;headerlink&#34; title=&#34;背景图&#34;&gt;&lt;/a&gt;背景图&lt;/h2&gt;&lt;p&gt;（施工中——2022.4.22半夜一点半）&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;（4.23更新）&lt;br&gt;背景图是博客的门面，选一张得体的背景图，可以极大的提高博客的氛围感，甚至可以增加阅读体验，以下介绍一下插入背景图的方法&lt;/p&gt;
&lt;h3 id=&#34;主页背景图&#34;&gt;&lt;a href=&#34;#主页背景图&#34; class=&#34;headerlink&#34; title=&#34;主页背景图&#34;&gt;&lt;/a&gt;主页背景图&lt;/h3&gt;&lt;p&gt;主页背景图，我推荐构图简单，色彩主调统一的图片，否则背景图上的字会显示不清。&lt;br&gt;修改背景图的方法很简单，在config文件中，搜索&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;banner_img&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个是所有背景图的关键词，因此你可以搜索到17个词&lt;br&gt;找到index模块下的banner_img&lt;br&gt;&lt;img src=&#34;/2022/04/21/%E8%AE%B0%E5%BD%95%EF%BC%9A%E8%A3%85%E4%BF%AE%E5%8D%9A%E5%AE%A2/banner1.jpg&#34; alt=&#34;banner_img&#34;&gt;&lt;br&gt;其后面的目录是主题的source文件夹下的目录，只需要把你想要的图片放在这个目录下，并在config中替换即可&lt;/p&gt;
&lt;h3 id=&#34;其他背景图&#34;&gt;&lt;a href=&#34;#其他背景图&#34; class=&#34;headerlink&#34; title=&#34;其他背景图&#34;&gt;&lt;/a&gt;其他背景图&lt;/h3&gt;&lt;p&gt;emm，其他的背景图嘛，我希望你可以找到一套图，来和主页的背景映衬而且又各具特色，但是目前我还没有找到这种理想的图包。&lt;/p&gt;
&lt;h2 id=&#34;文章封面图&#34;&gt;&lt;a href=&#34;#文章封面图&#34; class=&#34;headerlink&#34; title=&#34;文章封面图&#34;&gt;&lt;/a&gt;文章封面图&lt;/h2&gt;&lt;p&gt;文章封面图的设置，是在文章的顶部内容栏中加入index_img: 一行&lt;br&gt;&lt;img src=&#34;/2022/04/21/%E8%AE%B0%E5%BD%95%EF%BC%9A%E8%A3%85%E4%BF%AE%E5%8D%9A%E5%AE%A2/index_img1.jpg&#34; alt=&#34;index_img&#34;&gt;&lt;br&gt;然后，图片的位置是你的&lt;font color=&#34;Red&#34; size=&#34;6&#34;&gt;&lt;strong&gt;主题目录下&lt;/strong&gt;&lt;/font&gt;的source&amp;#x2F;img文件夹，这里我建议给你的每篇文章进行归档，方便整理。&lt;br&gt;这样，你的博客文章就有封面图了&lt;br&gt;&lt;img src=&#34;/2022/04/21/%E8%AE%B0%E5%BD%95%EF%BC%9A%E8%A3%85%E4%BF%AE%E5%8D%9A%E5%AE%A2/index_img2.jpg&#34; alt=&#34;index_img&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;图片加载动画&#34;&gt;&lt;a href=&#34;#图片加载动画&#34; class=&#34;headerlink&#34; title=&#34;图片加载动画&#34;&gt;&lt;/a&gt;图片加载动画&lt;/h2&gt;&lt;p&gt;如果我们打开了懒加载功能，那么我们就会看到图片加载时会有一个动画，这里的加载其实是一个gif，和图片一样，我们也是可以更换的，比如换成一个跑步的Mario&lt;br&gt;&lt;img src=&#34;/2022/04/21/%E8%AE%B0%E5%BD%95%EF%BC%9A%E8%A3%85%E4%BF%AE%E5%8D%9A%E5%AE%A2/mario.gif&#34; alt=&#34;mario&#34;&gt;&lt;br&gt;下面介绍一下设置方法：&lt;br&gt;在config文件中找到lazyload模块，然后，找到loading_img&lt;br&gt;改为你在主题的source中的路径&lt;br&gt;&lt;img src=&#34;/2022/04/21/%E8%AE%B0%E5%BD%95%EF%BC%9A%E8%A3%85%E4%BF%AE%E5%8D%9A%E5%AE%A2/loading.jpg&#34; alt=&#34;loading&#34;&gt;&lt;br&gt;以上，操作完成。&lt;/p&gt;
&lt;h2 id=&#34;关于导航栏的一些玩法&#34;&gt;&lt;a href=&#34;#关于导航栏的一些玩法&#34; class=&#34;headerlink&#34; title=&#34;关于导航栏的一些玩法&#34;&gt;&lt;/a&gt;关于导航栏的一些玩法&lt;/h2&gt;&lt;p&gt;导航栏，美化是一个可以深入折腾的天地，简单介绍几个玩法&lt;/p&gt;
&lt;h3 id=&#34;毛玻璃特效&#34;&gt;&lt;a href=&#34;#毛玻璃特效&#34; class=&#34;headerlink&#34; title=&#34;毛玻璃特效&#34;&gt;&lt;/a&gt;毛玻璃特效&lt;/h3&gt;&lt;p&gt;这个可以让你的导航栏显示成亚克力效果&lt;br&gt;只需要在config文件的navbar模块下，ground_glass设置为enable：true即可，下面还可以调节模糊的颜色，模糊程度等。&lt;br&gt;&lt;img src=&#34;/2022/04/21/%E8%AE%B0%E5%BD%95%EF%BC%9A%E8%A3%85%E4%BF%AE%E5%8D%9A%E5%AE%A2/navbar1.jpg&#34; alt=&#34;ground_glass&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;自己的名字&#34;&gt;&lt;a href=&#34;#自己的名字&#34; class=&#34;headerlink&#34; title=&#34;自己的名字&#34;&gt;&lt;/a&gt;自己的名字&lt;/h3&gt;&lt;p&gt;你可以在导航栏的左侧标注你的名字，具体操作类似上条：&lt;br&gt;&lt;code&gt;navbar--blog_title&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;菜单图标&#34;&gt;&lt;a href=&#34;#菜单图标&#34; class=&#34;headerlink&#34; title=&#34;菜单图标&#34;&gt;&lt;/a&gt;菜单图标&lt;/h3&gt;&lt;p&gt;菜单上的选项，你可以设置图标&lt;br&gt;方法如下：&lt;br&gt;在navbar–menu模块下，找到对应的菜单栏选项，在icon：位置，根据自己的需要，选择对应的css&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://hexo.fluid-dev.com/docs/icon/#%E5%86%85%E7%BD%AE%E7%A4%BE%E4%BA%A4%E5%9B%BE%E6%A0%87&#34;&gt;css库&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;关于标签栏的一些玩法&#34;&gt;&lt;a href=&#34;#关于标签栏的一些玩法&#34; class=&#34;headerlink&#34; title=&#34;关于标签栏的一些玩法&#34;&gt;&lt;/a&gt;关于标签栏的一些玩法&lt;/h2&gt;&lt;h3 id=&#34;标签栏中显示的图标&#34;&gt;&lt;a href=&#34;#标签栏中显示的图标&#34; class=&#34;headerlink&#34; title=&#34;标签栏中显示的图标&#34;&gt;&lt;/a&gt;标签栏中显示的图标&lt;/h3&gt;&lt;p&gt;我们当然想让自己的名字显示在浏览器标签栏上来代替那个&lt;del&gt;丑陋的&lt;/del&gt;Hexo标识，我们可以在config文件中的&lt;/p&gt;
&lt;figure class=&#34;highlight avrasm&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs avrasm&#34;&gt;&lt;span class=&#34;hljs-symbol&#34;&gt;favicon:&lt;/span&gt;&lt;br&gt;以及&lt;br&gt;&lt;span class=&#34;hljs-symbol&#34;&gt;apple_touch_icon:&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这两项中，改变自己想要的图片，同样，图片的位置是&amp;#x2F;img&lt;br&gt;&lt;img src=&#34;/2022/04/21/%E8%AE%B0%E5%BD%95%EF%BC%9A%E8%A3%85%E4%BF%AE%E5%8D%9A%E5%AE%A2/favicon.jpg&#34; alt=&#34;favicon&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;标签栏的名字&#34;&gt;&lt;a href=&#34;#标签栏的名字&#34; class=&#34;headerlink&#34; title=&#34;标签栏的名字&#34;&gt;&lt;/a&gt;标签栏的名字&lt;/h3&gt;&lt;p&gt;改了图标，我们当然想要把“Hexo”改变为自己想要的名字&lt;br&gt;&lt;font color=&#34;Red&#34; size=&#34;6&#34;&gt;&lt;strong&gt;注意&lt;/strong&gt;&lt;/font&gt;，这个是要在blog目录下的config文件更改，不要在主题配置里找！&lt;br&gt;在config文件中，找到site模块&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/04/21/%E8%AE%B0%E5%BD%95%EF%BC%9A%E8%A3%85%E4%BF%AE%E5%8D%9A%E5%AE%A2/sitename.jpg&#34; alt=&#34;sitename&#34;&gt;&lt;br&gt;将其title设置为你想要的内容即可&lt;/p&gt;
&lt;h3 id=&#34;标签栏的连接符&#34;&gt;&lt;a href=&#34;#标签栏的连接符&#34; class=&#34;headerlink&#34; title=&#34;标签栏的连接符&#34;&gt;&lt;/a&gt;标签栏的连接符&lt;/h3&gt;&lt;p&gt;当你打开一个文章页面或其他页面时，你会发现：标签栏名称变为&lt;br&gt;&lt;code&gt;“页面名”-“站点名”&lt;/code&gt;&lt;br&gt;其实，中间的这个衔接符号，我们也是可以更改的，只需要在主题config文件中&lt;br&gt;找到“tab_title_separator:”模块&lt;br&gt;即可将其改为你想要的内容&lt;br&gt;&lt;img src=&#34;/2022/04/21/%E8%AE%B0%E5%BD%95%EF%BC%9A%E8%A3%85%E4%BF%AE%E5%8D%9A%E5%AE%A2/linker.jpg&#34; alt=&#34;linker&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;（4.24施工完毕，还有一些内容，回头再说了）&lt;/p&gt;
</content>
        <category term="博客" />
        <category term="记录" />
        <updated>2022-04-21T09:32:11.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/04/18/%E5%85%B3%E4%BA%8E%E8%A7%A3%E5%86%B3%E6%97%A0%E6%B3%95%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E7%9A%84%E9%97%AE%E9%A2%98/</id>
        <title>关于解决无法上传图片的问题</title>
        <link rel="alternate" href="http://example.com/2022/04/18/%E5%85%B3%E4%BA%8E%E8%A7%A3%E5%86%B3%E6%97%A0%E6%B3%95%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E7%9A%84%E9%97%AE%E9%A2%98/"/>
        <content type="html">&lt;h1 id=&#34;问题&#34;&gt;&lt;a href=&#34;#问题&#34; class=&#34;headerlink&#34; title=&#34;问题&#34;&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;p&gt;事情是这样的，我在写博客的时候发现，我的图片即使以正确的格式引用，依旧会出现无法加载的问题&lt;br&gt;&lt;img src=&#34;/2022/04/18/%E5%85%B3%E4%BA%8E%E8%A7%A3%E5%86%B3%E6%97%A0%E6%B3%95%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E7%9A%84%E9%97%AE%E9%A2%98/problem.jpg&#34; alt=&#34;问题如图&#34;&gt;&lt;/p&gt;
&lt;p&gt;众所周知，没有图片，你写个啥都没法直观地展示，就好像pre时用txt做演示，大家嘴上不说什么，心里肯定知道&lt;del&gt;你是忘了做ppt了&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;总之，根据我一晚上的研究成果，整理出来了几个解决图片无法显示的问题的方法供大家参考。&lt;/p&gt;
&lt;h1 id=&#34;解决方法&#34;&gt;&lt;a href=&#34;#解决方法&#34; class=&#34;headerlink&#34; title=&#34;解决方法&#34;&gt;&lt;/a&gt;解决方法&lt;/h1&gt;&lt;h2 id=&#34;目录&#34;&gt;&lt;a href=&#34;#目录&#34; class=&#34;headerlink&#34; title=&#34;目录&#34;&gt;&lt;/a&gt;目录&lt;/h2&gt;&lt;p&gt;一共有这么几个方法，大家可以都试试，挑一个自己最喜欢的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;./#%E5%9B%BE%E5%BA%8A%E6%B3%95&#34;&gt;图床法&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;github&amp;amp;gitee图床&lt;/li&gt;
&lt;li&gt;图床网站&lt;/li&gt;
&lt;li&gt;PicGo&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;./#%E6%9C%AC%E5%9C%B0%E4%B8%8A%E4%BC%A0%E6%B3%95&#34;&gt;本地上传法&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;图床法&#34;&gt;&lt;a href=&#34;#图床法&#34; class=&#34;headerlink&#34; title=&#34;图床法&#34;&gt;&lt;/a&gt;图床法&lt;/h2&gt;&lt;p&gt;是这样的，一般来说，你的hexo博客在部署到服务器时，不会给你上传那些文章里链接的图片的，所以你的md文章里链接的图片一般情况下是无法上传的，自然就无法加载出来，但是你的图片如果是网络图片，直接链接网址，就可以通过联网加载的方式显示有如下几种方法&lt;/p&gt;
&lt;h3 id=&#34;Github-amp-Gitee仓库图床&#34;&gt;&lt;a href=&#34;#Github-amp-Gitee仓库图床&#34; class=&#34;headerlink&#34; title=&#34;Github&amp;amp;Gitee仓库图床&#34;&gt;&lt;/a&gt;Github&amp;amp;Gitee仓库图床&lt;/h3&gt;&lt;p&gt;这个的原理就是让你的公有仓库变成图床，白嫖存储空间&lt;/p&gt;
&lt;h4 id=&#34;操作流程&#34;&gt;&lt;a href=&#34;#操作流程&#34; class=&#34;headerlink&#34; title=&#34;操作流程&#34;&gt;&lt;/a&gt;操作流程&lt;/h4&gt;&lt;p&gt;具体来说，github和gitee方法相似，这里仅介绍github，gitee方法类似&lt;br&gt;gitee的访问速度会更快一点，github的容量没有限制，可以自己取舍&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;注册一个github账户&lt;/li&gt;
&lt;li&gt;创建一个新的公有库，注意一定是&lt;strong&gt;公有&lt;/strong&gt;，否则外部无法访问&lt;/li&gt;
&lt;li&gt;在库存中创建一个文件夹&lt;br&gt; &lt;img src=&#34;/2022/04/18/%E5%85%B3%E4%BA%8E%E8%A7%A3%E5%86%B3%E6%97%A0%E6%B3%95%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E7%9A%84%E9%97%AE%E9%A2%98/github.jpg&#34; alt=&#34;add_a_file&#34;&gt;&lt;/li&gt;
&lt;li&gt;把你的图片上传&lt;br&gt;&lt;img src=&#34;/2022/04/18/%E5%85%B3%E4%BA%8E%E8%A7%A3%E5%86%B3%E6%97%A0%E6%B3%95%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E7%9A%84%E9%97%AE%E9%A2%98/upload.jpg&#34; alt=&#34;upload&#34;&gt;&lt;/li&gt;
&lt;li&gt;点击你的图片，复制地址框中的地址，注意要把bolb改为raw&lt;br&gt;&lt;img src=&#34;/2022/04/18/%E5%85%B3%E4%BA%8E%E8%A7%A3%E5%86%B3%E6%97%A0%E6%B3%95%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E7%9A%84%E9%97%AE%E9%A2%98/raw.jpg&#34; alt=&#34;raw&#34;&gt;&lt;/li&gt;
&lt;li&gt;然后就可以在你的博客里引用这个地址了！&lt;blockquote&gt;
&lt;p&gt;你可以用cdn加速github，比如Jsdelivr，加速方法不在本文讨论范围&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;图床网站&#34;&gt;&lt;a href=&#34;#图床网站&#34; class=&#34;headerlink&#34; title=&#34;图床网站&#34;&gt;&lt;/a&gt;图床网站&lt;/h3&gt;&lt;p&gt;上面说的只是把github当作一个公开访问的图片网站，当然，市面上还有很多的专用图床网站，免费的付费的都有，这里介绍一个免费的网站&lt;a href=&#34;https://imgtu.com/&#34;&gt;imgtu.com&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打开网站，上传图片&lt;br&gt;&lt;img src=&#34;/2022/04/18/%E5%85%B3%E4%BA%8E%E8%A7%A3%E5%86%B3%E6%97%A0%E6%B3%95%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E7%9A%84%E9%97%AE%E9%A2%98/image.jpg&#34; alt=&#34;image&#34;&gt;&lt;blockquote&gt;
&lt;p&gt;注意不能挂梯子&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;上传完成后，在底部链接栏，找到md链接，复制粘贴到你的文章插图位置就ok了&lt;br&gt;&lt;img src=&#34;/2022/04/18/%E5%85%B3%E4%BA%8E%E8%A7%A3%E5%86%B3%E6%97%A0%E6%B3%95%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E7%9A%84%E9%97%AE%E9%A2%98/save_the_link.jpg&#34; alt=&#34;save_the_link&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这个方法还是比较简单的,基本上有手就行，没手的话，&lt;del&gt;那你也别搞博客了&lt;/del&gt;&lt;/p&gt;
&lt;h3 id=&#34;PicGo&#34;&gt;&lt;a href=&#34;#PicGo&#34; class=&#34;headerlink&#34; title=&#34;PicGo&#34;&gt;&lt;/a&gt;PicGo&lt;/h3&gt;&lt;p&gt;除了以上介绍的两种方法，还有一个比较“软件化”的方案，就是&lt;a href=&#34;https://molunerfinn.com/PicGo/&#34;&gt;PicGo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PicGo是一个开源的软件，它的优点是方便快捷，不用登网站，操作比较easy，而且集成了很多平台。&lt;br&gt;&lt;img src=&#34;/2022/04/18/%E5%85%B3%E4%BA%8E%E8%A7%A3%E5%86%B3%E6%97%A0%E6%B3%95%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E7%9A%84%E9%97%AE%E9%A2%98/PicGo.jpg&#34; alt=&#34;PicGo&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;操作方法&#34;&gt;&lt;a href=&#34;#操作方法&#34; class=&#34;headerlink&#34; title=&#34;操作方法&#34;&gt;&lt;/a&gt;操作方法&lt;/h4&gt;&lt;p&gt;还是以GitHub为例，首先我们进入&lt;strong&gt;图床设置&lt;/strong&gt;-&amp;gt;&lt;strong&gt;Github&lt;/strong&gt;&lt;br&gt;&lt;img src=&#34;/2022/04/18/%E5%85%B3%E4%BA%8E%E8%A7%A3%E5%86%B3%E6%97%A0%E6%B3%95%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E7%9A%84%E9%97%AE%E9%A2%98/picgo_github.jpg&#34; alt=&#34;picgo_github&#34;&gt;&lt;br&gt;在对应的框里输入信息&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;存储路径是你的GitHub仓库里的路径，没有时会创建&lt;br&gt;自定义域名就是你可以用cdn加速访问图片，最后两级就是你的用户名和仓库名&lt;br&gt;下面介绍一下token的获取方法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;获取Github-Token&#34;&gt;&lt;a href=&#34;#获取Github-Token&#34; class=&#34;headerlink&#34; title=&#34;获取Github Token&#34;&gt;&lt;/a&gt;获取Github Token&lt;/h5&gt;&lt;p&gt;首先从个人列表进入settings&lt;br&gt;&lt;img src=&#34;/2022/04/18/%E5%85%B3%E4%BA%8E%E8%A7%A3%E5%86%B3%E6%97%A0%E6%B3%95%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E7%9A%84%E9%97%AE%E9%A2%98/token1.jpg&#34; alt=&#34;token1&#34;&gt;&lt;br&gt;然后进入最底部的developer settings&lt;br&gt;&lt;img src=&#34;/2022/04/18/%E5%85%B3%E4%BA%8E%E8%A7%A3%E5%86%B3%E6%97%A0%E6%B3%95%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E7%9A%84%E9%97%AE%E9%A2%98/token2.jpg&#34; alt=&#34;token2&#34;&gt;&lt;br&gt;然后进入Personal access tokens，点generate new token&lt;br&gt;&lt;img src=&#34;/2022/04/18/%E5%85%B3%E4%BA%8E%E8%A7%A3%E5%86%B3%E6%97%A0%E6%B3%95%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E7%9A%84%E9%97%AE%E9%A2%98/token3.jpg&#34; alt=&#34;token3&#34;&gt;&lt;br&gt;按照如下操作&lt;br&gt;&lt;img src=&#34;/2022/04/18/%E5%85%B3%E4%BA%8E%E8%A7%A3%E5%86%B3%E6%97%A0%E6%B3%95%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E7%9A%84%E9%97%AE%E9%A2%98/token4.jpg&#34; alt=&#34;token4&#34;&gt;&lt;br&gt;生成后记得复制，这个token&lt;font color=&#34;Red&#34; size=&#34;6&#34;&gt;&lt;strong&gt;只会出现一次&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;至此，PicGo的使用介绍就完成了&lt;/p&gt;
&lt;h2 id=&#34;本地上传法&#34;&gt;&lt;a href=&#34;#本地上传法&#34; class=&#34;headerlink&#34; title=&#34;本地上传法&#34;&gt;&lt;/a&gt;本地上传法&lt;/h2&gt;&lt;h2 id=&#34;（施工中，累了，明天再说）&#34;&gt;&lt;a href=&#34;#（施工中，累了，明天再说）&#34; class=&#34;headerlink&#34; title=&#34;（施工中，累了，明天再说）&#34;&gt;&lt;/a&gt;（施工中，累了，明天再说）&lt;/h2&gt;&lt;p&gt;2022.4.20更新&lt;/p&gt;
&lt;p&gt;继续说本地上传法&lt;/p&gt;
&lt;p&gt;我们之前说过，本地的图片是不会被hexo上传的，其实这个说法不严谨&lt;br&gt;严格来说，是你凭空放一张图片，无法上传&lt;br&gt;但是，我们可以通过一个方法来上传本地图片，那就是hexo-asset-image。&lt;/p&gt;
&lt;h3 id=&#34;操作方法-1&#34;&gt;&lt;a href=&#34;#操作方法-1&#34; class=&#34;headerlink&#34; title=&#34;操作方法&#34;&gt;&lt;/a&gt;操作方法&lt;/h3&gt;&lt;p&gt;首先安装hexo-asset-image&lt;br&gt;&lt;code&gt;npm install https://github.com/CodeFalling/hexo-asset-image --save&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注意，如果你安装速度慢的话，可以讲npm换为淘宝镜像，切换方法如下：&lt;br&gt;&lt;code&gt;npm config set registry https://registry.npm.taobao.org&lt;/code&gt;&lt;br&gt;安装完成后，我们要在_config.yml中作如下更改&lt;blockquote&gt;
&lt;p&gt; 将 post_asset_folder 设置为true&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/2022/04/18/%E5%85%B3%E4%BA%8E%E8%A7%A3%E5%86%B3%E6%97%A0%E6%B3%95%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E7%9A%84%E9%97%AE%E9%A2%98/post.jpg&#34; alt=&#34;post&#34;&gt;&lt;br&gt;然后，每当我们新建一篇博客时，就会有一个同名文件夹在_post文件夹中生成了&lt;br&gt;我们把需要插入的图片放到这个文件夹里面，在文章中引用格式如下&lt;br&gt;&lt;code&gt;![图片描述]（./包名/NO.01.001.jpg）&lt;/code&gt;&lt;br&gt;&lt;font size=&#34;5&#34;&gt;或者&lt;/font&gt;&lt;br&gt;&lt;code&gt;![logo](logo.jpg)&lt;/code&gt;&lt;br&gt;就可以了，这个方法也是我在用的方法，非常方便，缺点是对服务器压力比较大。&lt;/p&gt;
&lt;h1 id=&#34;总结&#34;&gt;&lt;a href=&#34;#总结&#34; class=&#34;headerlink&#34; title=&#34;总结&#34;&gt;&lt;/a&gt;总结&lt;/h1&gt;&lt;p&gt;上述的几个方法，各有优缺点，可以结合自己的特点来使用&lt;br&gt;注意图片描述必须是全英文，否则无法显示图片&lt;br&gt;希望有所帮助&lt;/p&gt;
</content>
        <category term="技术" />
        <category term="博客" />
        <category term="markdown" />
        <updated>2022-04-18T15:45:02.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2022/04/18/Hexo%E4%B8%BB%E9%A2%98%E6%A8%A1%E6%9D%BF%E5%88%87%E6%8D%A2/</id>
        <title>Hexo主题模板切换</title>
        <link rel="alternate" href="http://example.com/2022/04/18/Hexo%E4%B8%BB%E9%A2%98%E6%A8%A1%E6%9D%BF%E5%88%87%E6%8D%A2/"/>
        <content type="html">&lt;h1 id=&#34;下载主题&#34;&gt;&lt;a href=&#34;#下载主题&#34; class=&#34;headerlink&#34; title=&#34;下载主题&#34;&gt;&lt;/a&gt;下载主题&lt;/h1&gt;&lt;p&gt;首先，我们找一个比较好看的主题，比如我找的Fluid&lt;br&gt;&lt;img src=&#34;/2022/04/18/Hexo%E4%B8%BB%E9%A2%98%E6%A8%A1%E6%9D%BF%E5%88%87%E6%8D%A2/fluid.jpg&#34; alt=&#34;fluid网址：https://hexo.fluid-dev.com &#34;&gt;&lt;/p&gt;
&lt;p&gt;找到了这个主题的&lt;a href=&#34;https://github.com/fluid-dev/hexo-theme-fluid&#34;&gt;github网址&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;然后呢，我们需要在cmd中输入一行神秘代码&lt;br&gt;&lt;code&gt;git clone https://github.com/fluid-dev/hexo-theme-fluid themes\fluid&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;git clone 是在GitHub上下载的命令，中间的部分是这个主题的网址，最后是你在blog目录下需要把这个下载的主题存到的位置，系统会自动创建空的文件夹。&lt;/p&gt;
&lt;p&gt;然后静待下载，下载完成后，我们的工作就成功了一大半了！&lt;/p&gt;
&lt;h1 id=&#34;应用主题&#34;&gt;&lt;a href=&#34;#应用主题&#34; class=&#34;headerlink&#34; title=&#34;应用主题&#34;&gt;&lt;/a&gt;应用主题&lt;/h1&gt;&lt;p&gt;应用主题的方法很简单，只需要打开blog目录下的_config.yml文件，把倒数第二个部分的“theme：”改为你的主题所在文件夹的名字就OK了。&lt;br&gt;&lt;img src=&#34;/2022/04/18/Hexo%E4%B8%BB%E9%A2%98%E6%A8%A1%E6%9D%BF%E5%88%87%E6%8D%A2/config.jpg&#34; alt=&#34;这样&#34;&gt;&lt;/p&gt;
&lt;p&gt;别忘了部署到服务器！&lt;/p&gt;
</content>
        <category term="技术" />
        <category term="博客" />
        <category term="markdown" />
        <updated>2022-04-18T12:56:34.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2021/08/24/md%E8%AF%AD%E6%B3%95%E8%AF%95%E9%AA%8C/</id>
        <title>md语法试验</title>
        <link rel="alternate" href="http://example.com/2021/08/24/md%E8%AF%AD%E6%B3%95%E8%AF%95%E9%AA%8C/"/>
        <content type="html">&lt;h1 id=&#34;分层&#34;&gt;&lt;a href=&#34;#分层&#34; class=&#34;headerlink&#34; title=&#34;分层&#34;&gt;&lt;/a&gt;分层&lt;/h1&gt;&lt;h2 id=&#34;二级目录&#34;&gt;&lt;a href=&#34;#二级目录&#34; class=&#34;headerlink&#34; title=&#34;二级目录&#34;&gt;&lt;/a&gt;二级目录&lt;/h2&gt;&lt;h3 id=&#34;列表&#34;&gt;&lt;a href=&#34;#列表&#34; class=&#34;headerlink&#34; title=&#34;列表&#34;&gt;&lt;/a&gt;列表&lt;/h3&gt;&lt;h4 id=&#34;无序列表&#34;&gt;&lt;a href=&#34;#无序列表&#34; class=&#34;headerlink&#34; title=&#34;无序列表&#34;&gt;&lt;/a&gt;无序列表&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;小标&lt;/li&gt;
&lt;li&gt;无序&lt;/li&gt;
&lt;li&gt;各种符号都行&lt;ul&gt;
&lt;li&gt;第二层嵌套&lt;ul&gt;
&lt;li&gt;第n层嵌套&lt;h4 id=&#34;有序列表&#34;&gt;&lt;a href=&#34;#有序列表&#34; class=&#34;headerlink&#34; title=&#34;有序列表&#34;&gt;&lt;/a&gt;有序列表&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;有序列表&lt;/li&gt;
&lt;li&gt;第一行序号为起始序号&lt;/li&gt;
&lt;li&gt;即使后面序号错误也会顺序下排&lt;ol&gt;
&lt;li&gt;嵌套效果&lt;h2 id=&#34;内容&#34;&gt;&lt;a href=&#34;#内容&#34; class=&#34;headerlink&#34; title=&#34;内容&#34;&gt;&lt;/a&gt;内容&lt;/h2&gt;&lt;h3 id=&#34;引用说明&#34;&gt;&lt;a href=&#34;#引用说明&#34; class=&#34;headerlink&#34; title=&#34;引用说明&#34;&gt;&lt;/a&gt;引用说明&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;引用内容&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;二级引用&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;三级引用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;代码块&#34;&gt;&lt;a href=&#34;#代码块&#34; class=&#34;headerlink&#34; title=&#34;代码块&#34;&gt;&lt;/a&gt;代码块&lt;/h3&gt;&lt;p&gt;&lt;code&gt;少量代码，单行使用，用·包裹&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs&#34;&gt;&lt;br&gt;大量代码多行使用，用三个·包裹&lt;br&gt;大量代码多行使用，用三个·包裹&lt;br&gt;大量代码多行使用，用三个·包裹&lt;br&gt;大量代码多行使用，用三个·包裹&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;链接&#34;&gt;&lt;a href=&#34;#链接&#34; class=&#34;headerlink&#34; title=&#34;链接&#34;&gt;&lt;/a&gt;链接&lt;/h2&gt;&lt;h3 id=&#34;网页链接&#34;&gt;&lt;a href=&#34;#网页链接&#34; class=&#34;headerlink&#34; title=&#34;网页链接&#34;&gt;&lt;/a&gt;网页链接&lt;/h3&gt;&lt;h4 id=&#34;行内式&#34;&gt;&lt;a href=&#34;#行内式&#34; class=&#34;headerlink&#34; title=&#34;行内式&#34;&gt;&lt;/a&gt;行内式&lt;/h4&gt;&lt;p&gt;链接放在【】中，地址放在后面的小括号中，引号内是title&lt;br&gt;&lt;a href=&#34;www.baidu.com&#34; title=&#34;百度一下，你就知道&#34;&gt;百度&lt;/a&gt;&lt;br&gt;[百度]是一个搜索引擎&lt;/p&gt;
&lt;h4 id=&#34;参数式&#34;&gt;&lt;a href=&#34;#参数式&#34; class=&#34;headerlink&#34; title=&#34;参数式&#34;&gt;&lt;/a&gt;参数式&lt;/h4&gt;&lt;p&gt;链接在【】内，地址在冒号后面，title用引号&lt;br&gt;[百度]:&lt;a href=&#34;http://www.baidu.com/&#34;&gt;www.baidu.com&lt;/a&gt; “百度一下，你就知道”&lt;br&gt;[百度]是一个搜索引擎&lt;/p&gt;
&lt;h3 id=&#34;图片&#34;&gt;&lt;a href=&#34;#图片&#34; class=&#34;headerlink&#34; title=&#34;图片&#34;&gt;&lt;/a&gt;图片&lt;/h3&gt;&lt;p&gt;与链接基本一致，注意在引用图片时【】前加上！&lt;br&gt;&lt;img src=&#34;/2021/08/24/md%E8%AF%AD%E6%B3%95%E8%AF%95%E9%AA%8C/download\edge\13623636-6d878e3d3ef63825&#34; alt=&#34;logo&#34;&gt; “my logo”&lt;/p&gt;
&lt;h2 id=&#34;工整&#34;&gt;&lt;a href=&#34;#工整&#34; class=&#34;headerlink&#34; title=&#34;工整&#34;&gt;&lt;/a&gt;工整&lt;/h2&gt;&lt;h3 id=&#34;分割线&#34;&gt;&lt;a href=&#34;#分割线&#34; class=&#34;headerlink&#34; title=&#34;分割线&#34;&gt;&lt;/a&gt;分割线&lt;/h3&gt;&lt;h2 id=&#34;由-这三种之一的三个符号表示&#34;&gt;&lt;a href=&#34;#由-这三种之一的三个符号表示&#34; class=&#34;headerlink&#34; title=&#34;由* - _这三种之一的三个符号表示&#34;&gt;&lt;/a&gt;由* - _这三种之一的三个符号表示&lt;/h2&gt;&lt;p&gt;这就是分割线&lt;/p&gt;
&lt;h3 id=&#34;表格&#34;&gt;&lt;a href=&#34;#表格&#34; class=&#34;headerlink&#34; title=&#34;表格&#34;&gt;&lt;/a&gt;表格&lt;/h3&gt;&lt;p&gt;&amp;#x2F;&amp;#x2F;例子&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;123&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;234&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;345&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;abc&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;bcd&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;cde&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2 id=&#34;其他&#34;&gt;&lt;a href=&#34;#其他&#34; class=&#34;headerlink&#34; title=&#34;其他&#34;&gt;&lt;/a&gt;其他&lt;/h2&gt;&lt;h3 id=&#34;强调字体&#34;&gt;&lt;a href=&#34;#强调字体&#34; class=&#34;headerlink&#34; title=&#34;强调字体&#34;&gt;&lt;/a&gt;强调字体&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;强调字体&lt;br&gt; 用星号包裹，如&lt;em&gt;md&lt;/em&gt;,&lt;strong&gt;md&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt;转义&lt;br&gt; 用\&lt;/li&gt;
&lt;li&gt;删除线&lt;br&gt; &lt;del&gt;删除&lt;/del&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="技术" />
        <category term="博客" />
        <category term="markdown" />
        <updated>2021-08-24T07:32:52.000Z</updated>
    </entry>
</feed>
